import { CustomButton } from "custom-button.slint";

// 定义文件信息结构
export struct FileInfo {
    path: string,
    name: string,
    size: int,
    time: int,
    hash: string,
}

// 搜索结果项组件
component ResultItem {
    in property<FileInfo> file;
    callback double_clicked();
    
    height: 50px;
    
    VerticalLayout {
        Rectangle {
            background: touch.has-hover ? #f0f0f0 : transparent;
            
            HorizontalLayout {
                padding: 8px;
                spacing: 10px;
                
                // 文件名
                Text {
                    text: file.name;
                    font-weight: 500;
                    vertical-alignment: center;
                    width: 200px;
                    overflow: elide;
                }
                
                // 文件大小
                Text {
                    text: {
                        if (file.size < 1024) {
                            return file.size + "B";
                        } else if (file.size < 1024 * 1024) {
                            return Math.round(file.size / 1024) + "KB";
                        } else {
                            return Math.round(file.size / (1024 * 1024)) + "MB";
                        }
                    }
                    vertical-alignment: center;
                    width: 80px;
                }
                
                // 文件路径
                Text {
                    text: file.path;
                    color: #666;
                    vertical-alignment: center;
                    overflow: elide;
                    horizontal-stretch: 1;
                }
            }
            
            touch := TouchArea {
                double-clicked => {
                    root.double_clicked();
                }
            }
        }
        
        // 底部分隔线
        Rectangle {
            height: 1px;
            background: #e0e0e0;
        }
    }
}

// 搜索结果视图组件
export component SearchResultView {
    in property<[FileInfo]> files;
    callback item_double_clicked(FileInfo);
    
    Rectangle {
        background: white;
        border-radius: 4px;
        border-color: #ddd;
        border-width: 1px;
        
        // 表头
        header := Rectangle {
            height: 40px;
            background: #f5f5f5;
            
            HorizontalLayout {
                padding: 8px;
                spacing: 10px;
                
                Text {
                    text: "名称";
                    font-weight: 700;
                    vertical-alignment: center;
                    width: 200px;
                }
                
                Text {
                    text: "大小";
                    font-weight: 700;
                    vertical-alignment: center;
                    width: 80px;
                }
                
                Text {
                    text: "路径";
                    font-weight: 700;
                    vertical-alignment: center;
                }
            }
        }
        
        Rectangle {
            y: header.height;
            height: 1px;
            width: 100%;
            background: #ddd;
        }
        
        // 结果列表
        Flickable {
            y: header.height + 1px;
            height: parent.height - header.height - 1px;
            width: 100%;
            viewport-height: results.preferred-height;
            viewport-width: parent.width;
            
            results := VerticalLayout {
                padding: 0px;
                spacing: 0px;
                
                for file in files: ResultItem {
                    file: file;
                    double_clicked => {
                        root.item_double_clicked(file);
                    }
                }
            }
        }
    }
}
