import { Button } from "std-widgets.slint";
import { CheckBox } from "std-widgets.slint";
import { LineEdit } from "std-widgets.slint";
import { ComboBox } from "std-widgets.slint";
import { SpinBox } from "std-widgets.slint";
import { ScrollView } from "std-widgets.slint";
import { GroupBox } from "std-widgets.slint";

// 日期限制类型枚举
export enum DateLimitType {
    None,
    Days,
    Weeks,
    Years,
    Specific,
}

// 正则表达式匹配目标枚举
export enum RegexTarget {
    FileName,
    FilePath,
}

// 过滤条件数据结构
export struct FilterData {
    // 基本选项
    search_hidden_files: bool,
    search_hidden_folders: bool,
    search_readonly_files: bool,
    
    // 文件大小限制 (单位: MB)
    min_file_size: int,
    max_file_size: int,
    
    // 日期限制
    date_limit_type: DateLimitType,
    date_limit_value: int,  // 具体数值（天数/周数/年数）
    
    // 完整日期 - 起始日期
    specific_year: int,
    specific_month: int,
    specific_day: int,
    
    // 完整日期 - 结束日期
    end_year: int,
    end_month: int,
    end_day: int,
    
    // 快速选择模式相关
    time_unit: int,     // 0=day, 1=week, 2=month, 3=year
    time_newer: bool,   // true=内, false=外
    
    // 正则表达式
    regex_pattern: string,
    regex_target: RegexTarget,
    
    // 特殊选项
    record_hash: bool,
}

// 优化的过滤条件设置组件 - 使用更简化的布局和懒加载
export component FilterSettingsOptimized {
    width: 90%;
    height: 90%;
    
    // 基本选项属性
    in-out property<bool> search_hidden_files: true;
    in-out property<bool> search_hidden_folders: true;
    in-out property<bool> search_readonly_files: true;
    
    // 文件大小限制属性
    in-out property<int> min_file_size: 0;
    in-out property<int> max_file_size: 65536; // 64MB    // 日期限制属性
    in-out property<int> date_limit_type: 0; // 0=None, 1=Days, 2=Weeks, 3=Years, 4=Specific
    in-out property<int> date_limit_value: 1;
    
    // 日期UI模式 - 0=无限制, 1=完整日期, 2=快速选择
    in-out property<int> date_ui_mode: 0;
    
    // 扩展日期筛选 - 完整日期范围
    in-out property<int> start_year: 2024;
    in-out property<int> start_month: 1;
    in-out property<int> start_day: 1;
    in-out property<int> end_year: 2025;
    in-out property<int> end_month: 6;
    in-out property<int> end_day: 22;
    
    // 扩展日期筛选 - 快速选择
    in-out property<int> time_value: 1;
    in-out property<int> time_unit: 0; // 0=day, 1=week, 2=month, 3=year
    in-out property<bool> time_newer: true; // true=内, false=外
    
    in-out property<int> specific_year: 2025;
    in-out property<int> specific_month: 6;
    in-out property<int> specific_day: 22;
    
    // 强制重新渲染的标志
    property<int> date_render_key: 0;
    
    // 正则表达式属性
    in-out property<string> regex_pattern: "";
    in-out property<int> regex_target: 0; // 0=FileName, 1=FilePath
    
    // 特殊选项属性
    in-out property<bool> record_hash: false;
    
    // 控制是否显示详细设置
    property<bool> show_advanced: false;
    
    // 回调函数
    callback filter_changed();
    callback reset_to_defaults();    // 获取过滤数据的方法
    public function get_filter_data() -> FilterData {
        return {
            search_hidden_files: root.search_hidden_files,
            search_hidden_folders: root.search_hidden_folders,
            search_readonly_files: root.search_readonly_files,
            min_file_size: root.min_file_size,
            max_file_size: root.max_file_size,
            date_limit_type: root.date_limit_type == 0 ? DateLimitType.None :
                           root.date_limit_type == 1 ? DateLimitType.Days :
                           root.date_limit_type == 2 ? DateLimitType.Weeks :
                           root.date_limit_type == 3 ? DateLimitType.Years : DateLimitType.Specific,
            date_limit_value: root.date_ui_mode == 2 ? root.time_value : root.date_limit_value, // 快速选择时使用time_value
            // 完整日期范围时，用start_*和end_*替代specific_*
            specific_year: root.date_ui_mode == 1 ? root.start_year : root.specific_year,
            specific_month: root.date_ui_mode == 1 ? root.start_month : root.specific_month,
            specific_day: root.date_ui_mode == 1 ? root.start_day : root.specific_day,
            // 额外添加结束日期信息
            end_year: root.end_year,
            end_month: root.end_month,
            end_day: root.end_day,
            // 额外添加时间单位和内外选项
            time_unit: root.time_unit,
            time_newer: root.time_newer,
            regex_pattern: root.regex_pattern,
            regex_target: root.regex_target == 0 ? RegexTarget.FileName : RegexTarget.FilePath,
            record_hash: root.record_hash,
        };
    }
    
    // 根据date_limit_type同步UI模式
    function sync_date_ui_mode() {
        if (root.date_limit_type == 0) {
            root.date_ui_mode = 0; // 无限制
        } else if (root.date_limit_type == 4) {
            root.date_ui_mode = 1; // 输入完整日期
        } else if (root.date_limit_type == 1 || root.date_limit_type == 2 || root.date_limit_type == 3) {
            root.date_ui_mode = 2; // 快速选择（已选择）
        }
    }    Rectangle {
        background: #ffffff;
        width: 100%;
        height: 100%;
        
        // 初始化时同步UI状态
        init => {
            root.sync_date_ui_mode();
        }
        
        ScrollView {
            width: 100%;
            height: 100%;
            
            VerticalLayout {
                padding: 20px;
                spacing: 20px;
                alignment: start;
            
            // 标题
            Text {
                text: "设置过滤条件";
                font-size: 20px;
                font-weight: 700;
                color: #333333;
            }
            
            // 基本选项 - 始终可见
            Rectangle {
                width: 100%;
                height: 120px;
                background: #f8f9fa;
                border-radius: 8px;
                
                VerticalLayout {
                    padding: 15px;
                    spacing: 10px;
                    
                    Text {
                        text: "基本选项";
                        font-size: 16px;
                        font-weight: 600;
                        color: #495057;
                    }
                    
                    HorizontalLayout {
                        spacing: 20px;
                        
                        CheckBox {
                            text: "搜索隐藏文件";
                            checked <=> root.search_hidden_files;
                            toggled => { root.filter_changed(); }
                        }
                        
                        CheckBox {
                            text: "搜索隐藏文件夹";
                            checked <=> root.search_hidden_folders;
                            toggled => { root.filter_changed(); }
                        }
                        
                        CheckBox {
                            text: "搜索只读文件";
                            checked <=> root.search_readonly_files;
                            toggled => { root.filter_changed(); }
                        }
                    }
                }
            }
            
            // 显示/隐藏高级选项的按钮
            Button {
                text: root.show_advanced ? "隐藏高级选项" : "显示高级选项";
                clicked => {
                    root.show_advanced = !root.show_advanced;
                }
            }
              // 高级选项 - 懒加载
            if root.show_advanced: Rectangle {
                width: 100%;
                height: 500px;  // 增加高度以容纳日期设置
                background: #f8f9fa;
                border-radius: 8px;
                
                ScrollView {
                    width: 100%;
                    height: 100%;
                    
                    VerticalLayout {
                        padding: 15px;
                        spacing: 15px;
                        
                        // 文件大小限制
                        Rectangle {
                            width: 100%;
                            height: 80px;
                            background: #ffffff;
                            border-radius: 6px;
                            
                            VerticalLayout {
                                padding: 10px;
                                spacing: 8px;
                                
                                Text {
                                    text: "文件大小限制 (MB)";
                                    font-weight: 600;
                                    color: #495057;
                                }
                                
                                HorizontalLayout {
                                    spacing: 10px;
                                    
                                    Text { text: "最小:"; vertical-alignment: center; }
                                    SpinBox {
                                        value <=> root.min_file_size;
                                        minimum: 0;
                                        maximum: 1048576;
                                        edited(value) => { root.filter_changed(); }
                                    }
                                    Text { text: "最大:"; vertical-alignment: center; }
                                    SpinBox {
                                        value <=> root.max_file_size;
                                        minimum: 0;
                                        maximum: 1048576;
                                        edited(value) => { root.filter_changed(); }
                                    }
                                }
                            }
                        }
                        
                        // 正则表达式
                        Rectangle {
                            width: 100%;
                            height: 100px;
                            background: #ffffff;
                            border-radius: 6px;
                            
                            VerticalLayout {
                                padding: 10px;
                                spacing: 8px;
                                
                                Text {
                                    text: "正则表达式过滤";
                                    font-weight: 600;
                                    color: #495057;
                                }
                                
                                HorizontalLayout {
                                    spacing: 10px;
                                      ComboBox {
                                        model: ["文件名", "文件路径"];
                                        current-index: root.regex_target;
                                        selected(value) => {
                                            debug("Selected regex target: " + value);
                                            if (value == "文件名") { root.regex_target = 0; }
                                            else { root.regex_target = 1; }
                                            root.filter_changed();
                                        }
                                    }
                                    
                                    LineEdit {
                                        text <=> root.regex_pattern;
                                        placeholder-text: "输入正则表达式";
                                        edited(text) => { root.filter_changed(); }
                                    }
                                }
                            }
                        }                        // 日期限制
                        Rectangle {
                            width: 100%;
                            height: 220px; // 增大高度以适应更多控件
                            background: #ffffff;
                            border-radius: 6px;
                            
                            VerticalLayout {
                                padding: 10px;
                                spacing: 8px;
                                
                                Text {
                                    text: "最后修改日期限制";
                                    font-weight: 600;
                                    color: #495057;
                                }                                
                                date-change:= HorizontalLayout {
                                    spacing: 10px;
                                    
                                    Text { text: "限制类型:"; vertical-alignment: center; }                                    
                                    ComboBox {
                                        model: ["无限制", "完整指定日期", "快速选择"];
                                        current-index <=> root.date_ui_mode;
                                        selected(index) => {
                                            if (index == "无限制") {
                                                root.date_ui_mode = 0;
                                                root.date_limit_type = 0; // None - 重置为无限制
                                                root.date_render_key += 1; // 强制重新渲染
                                            } else if (index == "完整指定日期") {
                                                root.date_ui_mode = 1;
                                                root.date_limit_type = 4; // Specific - 输入完整日期
                                                root.date_render_key += 1; // 强制重新渲染
                                            } else if (index == "快速选择") {
                                                root.date_ui_mode = 2;
                                                // 快速选择模式时，先重置date_limit_type为0，等用户点击按钮
                                                root.date_limit_type = 0;
                                                root.date_render_key += 1; // 强制重新渲染
                                            }
                                            root.filter_changed();
                                        }
                                    }                            
                                }
                                
                                // 动态日期输入区域 - 使用Rectangle的visible属性
                                Rectangle {
                                    width: 100%;
                                    height: 140px; // 增大高度以适应更多控件
                                    visible: root.date_ui_mode != 0;
                                    
                                    // 完整指定日期模式 - 支持起始和结束日期
                                    Rectangle {
                                        width: 100%;
                                        height: 100%;
                                        visible: root.date_ui_mode == 1;
                                        
                        VerticalLayout {
                                            spacing: 12px;
                                            
                                            // 起始日期
                                            HorizontalLayout {
                                                spacing: 10px;
                                                
                                                Text { text: "起始日期:"; vertical-alignment: center; }
                                                SpinBox {
                                                    value <=> root.specific_year; // 使用specific_year而不是start_year
                                                    minimum: 1970;
                                                    maximum: 2100;
                                                    edited(value) => { 
                                                        // 同时更新start_year以保持兼容性
                                                        root.start_year = value;
                                                        root.filter_changed(); 
                                                    }
                                                }
                                                Text { text: "年"; vertical-alignment: center; }
                                                SpinBox {
                                                    value <=> root.specific_month; // 使用specific_month而不是start_month
                                                    minimum: 1;
                                                    maximum: 12;
                                                    edited(value) => { 
                                                        // 同时更新start_month以保持兼容性
                                                        root.start_month = value;
                                                        root.filter_changed(); 
                                                    }
                                                }
                                                Text { text: "月"; vertical-alignment: center; }
                                                SpinBox {
                                                    value <=> root.specific_day; // 使用specific_day而不是start_day
                                                    minimum: 1;
                                                    maximum: 31;
                                                    edited(value) => { 
                                                        // 同时更新start_day以保持兼容性
                                                        root.start_day = value;
                                                        root.filter_changed(); 
                                                    }
                                                }
                                                Text { text: "日"; vertical-alignment: center; }
                                            }
                                            
                                            // 结束日期
                                            HorizontalLayout {
                                                spacing: 10px;
                                                
                                                Text { text: "结束日期:"; vertical-alignment: center; }
                                                SpinBox {
                                                    value <=> root.end_year;
                                                    minimum: 1970;
                                                    maximum: 2100;
                                                    edited(value) => { root.filter_changed(); }
                                                }
                                                Text { text: "年"; vertical-alignment: center; }
                                                SpinBox {
                                                    value <=> root.end_month;
                                                    minimum: 1;
                                                    maximum: 12;
                                                    edited(value) => { root.filter_changed(); }
                                                }
                                                Text { text: "月"; vertical-alignment: center; }
                                                SpinBox {
                                                    value <=> root.end_day;
                                                    minimum: 1;
                                                    maximum: 31;
                                                    edited(value) => { root.filter_changed(); }
                                                }
                                                Text { text: "日"; vertical-alignment: center; }
                                            }
                                              // 应用按钮
                                            Button {
                                                text: "应用日期范围";
                                                clicked => {
                                                    root.date_limit_type = 4; // Specific
                                                    // 同步起始和结束日期
                                                    root.start_year = root.specific_year;
                                                    root.start_month = root.specific_month;
                                                    root.start_day = root.specific_day;
                                                    root.filter_changed();
                                                }
                                            }
                                        }
                                    }
                                    
                                    // 快速选择模式
                                    Rectangle {
                                        width: 100%;
                                        height: 100%;
                                        visible: root.date_ui_mode == 2;
                                        
                                        VerticalLayout {
                                            spacing: 12px;
                                            
                                            // 快速选择控件
                                            HorizontalLayout {
                                                spacing: 10px;
                                                alignment: start;
                                                
                                                Text { text: "数值:"; vertical-alignment: center; }
                                                SpinBox {
                                                    value <=> root.time_value;
                                                    minimum: 1;
                                                    maximum: 9999;
                                                    edited(value) => { }
                                                }
                                                
                                                ComboBox {
                                                    model: ["天", "周", "月", "年"];
                                                    current-index <=> root.time_unit;
                                                    selected(index) => { }
                                                }
                                                
                                                ComboBox {
                                                    model: ["内", "外"];
                                                    current-index: root.time_newer ? 0 : 1;
                                                    selected(index) => {
                                                        root.time_newer = (index == 0);
                                                    }
                                                }
                                            }
                                            
                                            // 应用按钮
                                            Button {
                                                text: "应用快速选择";
                                                clicked => {
                                                    // 根据时间单位设置date_limit_type
                                                    if (root.time_unit == 0) { // 天
                                                        root.date_limit_type = 1;
                                                    } else if (root.time_unit == 1) { // 周
                                                        root.date_limit_type = 2;
                                                    } else if (root.time_unit == 2) { // 月
                                                        // 月份设为天数
                                                        root.date_limit_type = 1;
                                                        root.time_value = root.time_value * 30;
                                                    } else if (root.time_unit == 3) { // 年
                                                        root.date_limit_type = 3;
                                                    }
                                                    
                                                    // 传递值到date_limit_value
                                                    root.date_limit_value = root.time_value;
                                                    root.filter_changed();
                                                }
                                            }
                                        }
                                    }
                                }
                                
                                // 显示当前选择的日期限制
                                if root.date_limit_type != 0: Text {
                                    text: {
                                        if (root.date_limit_type == 1) {
                                            return "已选择: " + root.time_value + "天" + (root.time_newer ? "内" : "外");
                                        } else if (root.date_limit_type == 2) {
                                            return "已选择: " + root.time_value + "周" + (root.time_newer ? "内" : "外");
                                        } else if (root.date_limit_type == 3) {
                                            return "已选择: " + root.time_value + "年" + (root.time_newer ? "内" : "外");
                                        } else if (root.date_limit_type == 4) {
                                            return "已选择日期范围: " + root.start_year + "/" + root.start_month + "/" + root.start_day + 
                                                   " 至 " + root.end_year + "/" + root.end_month + "/" + root.end_day;
                                        } else {
                                            return "请选择日期限制";
                                        }
                                    }
                                    font-size: 12px;
                                    color: #6c757d;
                                }
                            }
                        }
                        
                        // 其他选项
                        Rectangle {
                            width: 100%;
                            height: 60px;
                            background: #ffffff;
                            border-radius: 6px;
                            
                            VerticalLayout {
                                padding: 10px;
                                spacing: 8px;
                                
                                CheckBox {
                                    text: "记录文件哈希值(用于重复文件检测)";
                                    checked <=> root.record_hash;
                                    toggled => { root.filter_changed(); }
                                }
                            }
                        }
                    }
                }
            }
            
            // 底部按钮
            HorizontalLayout {
                spacing: 10px;
                alignment: end;                  Button {
                    text: "重置默认值";                    clicked => {
                        // 基本设置
                        root.search_hidden_files = true;
                        root.search_hidden_folders = true;
                        root.search_readonly_files = true;
                        root.min_file_size = 0;
                        root.max_file_size = 65536;
                        
                        // 日期设置
                        root.date_limit_type = 0;
                        root.date_ui_mode = 0; // 重置UI模式
                        root.date_limit_value = 1;
                        
                        // 完整日期范围
                        root.start_year = 2024;
                        root.start_month = 1;
                        root.start_day = 1;
                        root.end_year = 2025;
                        root.end_month = 6;
                        root.end_day = 22;
                        
                        // 快速选择
                        root.time_value = 1;
                        root.time_unit = 0; // 天
                        root.time_newer = true; // 内
                        
                        // 旧的日期设置
                        root.specific_year = 2025;
                        root.specific_month = 6;
                        root.specific_day = 22;
                        
                        // 其他设置
                        root.regex_pattern = "";
                        root.regex_target = 0;
                        root.record_hash = false;
                        root.date_render_key += 1; // 强制重新渲染
                        
                        root.reset_to_defaults();
                        root.filter_changed();}
            }
        }
    }
}
    }
}
